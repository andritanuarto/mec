{"version":3,"sources":["actions/action-types.js","reducers/products.js","reducers/index.js","store.js","config.js","components/header/header.js","actions/products.js","components/header/header-container.js","components/products/products.js","components/products/products-container.js","components/app/app.js","serviceWorker.js","index.js"],"names":["PRODUCTS","initialState","items","loading","combineReducers","products","state","action","type","Object","assign","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","config","BASE_URL","LOGO","Header","props","className","dangerouslySetInnerHTML","__html","placeholder","onKeyDown","e","key","history","push","pathname","search","target","value","handleSearch","keyword","dispatch","setLoading","axios","get","then","response","total_product_count","setSearchedProducts","data","catch","error","console","log","connect","query","Products","getProducts","location","useEffect","queryString","parse","productsItems","_","isUndefined","map","product","product_code","src","default_image_urls","small_image_url","alt","full_name","App","path","component","HeaderContainer","ProductsContainer","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2a2053e.chunk.js","sourcesContent":["export const PRODUCTS = {\n  GET_PRODUCTS: 'GET_PRODUCTS',\n  LOADING: 'LOADING'\n};","import { PRODUCTS } from '../actions/action-types';\n\nconst initialState = {\n  items: [],\n  loading: false,\n};\n\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n    case PRODUCTS.GET_PRODUCTS: {\n      return Object.assign({}, state, {\n        items: action.products\n      });\n    }\n\n    case PRODUCTS.LOADING: {\n      return Object.assign({}, state, {\n        loading: action.loading\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n}","import { combineReducers } from 'redux';\nimport products from './products';\n\nexport default combineReducers({\n  products\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore (\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","const config = {\n  BASE_URL: 'https://www.mec.ca/api/v1/',\n  LOGO: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 144 144\" alt=\"MEC\">\n      <defs>\n          <style>.logo-cls-2{fill:#fff}</style>\n      </defs>\n      <path fill=\"#0ca948\" d=\"M0 0h144v144H0z\"></path>\n      <path class=\"logo-cls-2\" d=\"M66.5 97.94h25.47v-8.89H76.44V75.07h12.97v-8.88H76.44v-12.7h15.53V44.6H66.5v53.34zM112.87 43.4c-9.53 0-15.38 6.41-15.38 14.66v26.43c0 8.24 5.85 14.65 15.38 14.65s14.41-5.93 14.41-13.93v-6.49h-8.89v6.4c0 3.13-1.76 5.29-5.36 5.29s-5.45-2.16-5.45-5.12v-28c0-3 1.84-5.13 5.45-5.13s5.36 2.16 5.36 5.29v6.4h8.89v-6.51c0-8.01-4.96-13.94-14.41-13.94zM40.27 71.67l-1.69 9.85-1.68-9.85-5.52-27.07H18v53.34h8.89V59.26l2.08 11.61 5.37 27.07h8.49l5.36-27.07 2.08-11.61v38.68h8.89V44.6H45.79l-5.52 27.07z\"></path>\n    </svg>\n  `\n}\n\nexport default config;","import React from 'react';\nimport config from '../../config';\n\nconst Header = (props) => {\n  const searchHandler = (e) => {\n    if (e.key === 'Enter') {\n      props.history.push({\n        pathname: \"/products\",\n        search: `?keyword=${e.target.value}`\n      });\n    }\n  }\n\n  return (\n    <header className=\"header\">\n      <div className=\"mec-logo\" dangerouslySetInnerHTML={{ __html: config.LOGO }} />\n      <input type=\"text\" placeholder=\"search\" onKeyDown={searchHandler}/>\n    </header>\n  );\n}\n\nexport default Header;","import axios from 'axios';\nimport config from '../config';\nimport { PRODUCTS } from './action-types';\n\nexport const handleSearch = (keyword) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    return axios.get(`${config.BASE_URL}/products/search?keywords=${keyword}`).then((response) => {\n      if (!response.total_product_count) {\n        dispatch(setSearchedProducts(response.data.products));\n        dispatch(setLoading(false));\n      } else {\n        dispatch(setSearchedProducts([]));\n        dispatch(setLoading(false));\n      }\n    }).catch((error) => {\n      console.log(error);\n      dispatch(setSearchedProducts([]));\n      dispatch(setLoading(false));\n    });\n  }\n}\n\nconst setSearchedProducts = (products) => {\n  return {\n    type: PRODUCTS.GET_PRODUCTS,\n    products\n  }\n};\n\nconst setLoading = (loading) => {\n  return {\n    type: PRODUCTS.LOADING,\n    loading\n  }\n}\n\n","import { connect } from 'react-redux';\nimport Header from './header';\nimport { handleSearch } from '../../actions/products';\n\nconst mapStateToProps = (state) => {\n  return {\n    search: state.search,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleSearch: (query) => {\n      dispatch(handleSearch(query));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { useEffect }from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nconst Products = (props) => {\n  const { getProducts, location, products, loading } = props;\n\n  useEffect(() => {\n    getProducts(queryString.parse(location.search).keyword);\n  },[getProducts, location]);\n\n  const productsItems = !_.isUndefined(products)\n    ?\n      products.map((product) => {\n        return (\n          <li key={product.product_code}>\n            <img\n              src={product.default_image_urls.small_image_url}\n              alt={product.default_image_urls}\n            />\n            {product.full_name}\n          </li>\n        );\n      })\n    : <li>Can't Find Product You</li>;\n\n  return (\n    <div className=\"product\">\n      {loading ? \"Loading\" : productsItems}\n    </div>\n  );\n}\n\nexport default Products;","import { connect } from 'react-redux';\nimport Products from './products';\nimport { handleSearch } from '../../actions/products';\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products.items,\n    loading: state.products.loading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProducts: (keyword) => {\n      dispatch(handleSearch(keyword));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from '../../store';\nimport HeaderContainer from '../header/header-container';\nimport ProductsContainer from '../products/products-container';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Route path=\"/\" component={HeaderContainer} />\n          <Route path=\"/products\" component={ProductsContainer} />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}